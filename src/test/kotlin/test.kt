import com.google.gson.Gson
import com.google.gson.reflect.TypeToken
import com.parser.ReservedWordsData
import com.parser.parseProcess
import org.junit.jupiter.api.Test

class MyTest {
    @Test
    fun test() {
        val gson = Gson()
        val test = "תהליך בדיקת_אנה_זק\n" +
                "\n" +
                "קלט מספר_טלפון (מחרוזת)\n" +
                "פלט חיווי_אנה_זק\n" +
                "\n" +
                "{!* התהליך מקבל מספר טלפון המיוצג ע\"י מחרוזת *}\n" +
                "{!* הוא מחזיר חיווי חיובי או שלילי, בהתאם לשאלה האם המספר שהתקבל הוא הטלפון האייקוני של אנה זק *}\n" +
                "\n" +
                "תחילת_תהליך\n" +
                "\n" +
                "\n" +
                "פתח רשימת_טלפונים_אפשריים\n" +
                "הוסף_את \"0525381648\" לתוך רשימת_טלפונים_אפשריים\n" +
                "הוסף_את \"052-5381648\" לתוך רשימת_טלפונים_אפשריים\n" +
                "\n" +
                "אם מספר_טלפון נמצא_ב רשימת_טלפונים_אפשריים אז\n" +
                "\tחיווי_אנה_זק הוא חיובי\n" +
                "אחרת\n" +
                "\tחיווי_אנה_זק הוא שלילי\n" +
                "סיום_תנאי\n" +
                "\n" +
                "סיום_תהליך\n"
        val rvDictJson = "{\"PROCESS\":[\"תהליך\"],\"START PROCESS\":[\"תחילת_תהליך\"],\"END PROCESS\":[\"סיום_תהליך\"],\"EXIT\":[\"סיים_תהליך\"],\"INPUT\":[\"קלט\"],\"OUTPUT\":[\"פלט\"],\"INPUT OUTPUT\":[\"קלט_פלט\"],\"OF\":[\"של\",\"ב\",\"את\",\"ו\",\"עם\",\"ב\"],\"PLUS\":[\"ועוד\"],\"MINUS\":[\"פחות\"],\"MULT\":[\"כפול\"],\"DIV\":[\"חלקי\"],\"LESS\":[\"קטן_מ\"],\"LESS EQ\":[\"קטן_או_שווה_ל\"],\"GREAT\":[\"גדול_מ\"],\"GREAT EQ\":[\"גדול_או_שווה_ל\"],\"OR\":[\"או\"],\"AND\":[\"וגם\"],\"NOT\":[\"לא\",\"לא_נכון_ש\"],\"IS\":[\"הוא\",\"היא\"],\"IS MEMBER\":[\"נמצא_ב\"],\"ADD\":[\"הוסף_את\"],\"TO\":[\"לתוך\"],\"REMOVE\":[\"הוצא_את\"],\"LENGTH\":[\"אורך\"],\"EQ\":[\"הינה\",\"שווה_ל\",\"הינו\"],\"NOT EQ\":[\"אינו\"],\"FOR ALL\":[\"עבור_כל\"],\"EXIT LOOP\":[\"סיים_מעבר\"],\"END LOOP\":[\"סיום_מעבר\"],\"FROM\":[\"מתוך\"],\"IF\":[\"אם\"],\"ELSE IF\":[\"אחרת_אם\"],\"ELSE\":[\"אחרת\"],\"THEN\":[\"אז\"],\"END IF\":[\"סיום_תנאי\"],\"MAKE EMPTY\":[\"פתח\",\"רוקן_את\"],\"DO\":[\"בצע\"],\"FIRST FROM\":[\"ראשון_מתוך\",\"ראשונה_מתוך\"],\"SECOND FROM\":[\"שני_מתוך\",\"שניה_מתוך\"],\"IS EMPTY\":[\"ריקה\"],\"IS NOT EMPTY\":[\"לא_ריקה\"]}"
        val empMapType = object : TypeToken<Map<String, List<String>>>() {}.type
        val reservedWords = gson.fromJson<Map<String, List<String>>>(rvDictJson, empMapType)
        val test2 = "תהליך תהליך_רביעי\n" +
                "\n" +
                "קלט\n" +
                "פלט\n" +
                "קלט_פלט\n" +
                "\n" +
                "{!* כאן מסבירים מה התהליך עושה *}\n" +
                "\n" +
                "תחילת_תהליך\n" +
                "\n" +
                "גיל הוא 12\n" +
                "\n" +
                "אם (גיל קטן_מ 2) או (גיל גדול_מ 40) אז \n" +
                "    שלח_הודעת_שגיאה \"זה לא ילד\" \n" +
                "    מספר הוא גיל\n" +
                "אחרת_אם שם שווה_ל \"1\"  אז\n" +
                "    שלח_הודעת_שגיאה \"@שם@ זה שם מגעיל @1 ועוד \"1\"@\"\n" +
                "סיום_תנאי\n" +
                "\n" +
                "\n" +
                "סיום_תהליך\n"

        ReservedWordsData.setRvDict(reservedWords)
//        val res1 = parseProcess(test)
        val res2 = parseProcess(test2)
        val x = 0
    }
}
